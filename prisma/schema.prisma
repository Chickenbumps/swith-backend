// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"

}

model User {
  id         Int       @id @default(autoincrement())
  name       String
  username   String    @unique
  email      String    @unique
  password   String
  bio        String?
  avatar     String?
  /// @onDelete(CASACADE)
  followers  User[]    @relation("FollowRelation", references: [id])
  /// @onDelete(CASACADE)
  following  User[]    @relation("FollowRelation", references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  rank       String?   @default("Bronze")
  todayTime  Int?
  weekTime   Int?
  monthTime  Int?
  totalTime  Int?
  observer   Observer? @relation(fields: [observerId], references: [id])
  /// @onDelete(CASACADE)
  comments   Comment[]
  observerId Int?      @unique
  exp        Int?      @default(0)
  maxExp     Int?      @default(10)
  groups     Group[]
  /// @onDelete(CASACADE)
  messages   Message[]
  /// @onDelete(CASACADE)
  inviter    Inviter?
  /// @onDelete(CASACADE)
  time       Time[]
}

model Time {
  id        Int    @id @default(autoincrement())
  timeValue Int
  user      User   @relation(fields: [userId], references: [id])
  userId    Int
  createdAt String
  updatedAt String
  dayName   String
}

model Observer {
  id     Int   @id @default(autoincrement())
  user   User?
  userId Int   @unique
}

model Comment {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  payload   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id        Int      @id @default(autoincrement())
  payload   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  group     Group    @relation(fields: [groupId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  groupId   Int
  read      Boolean  @default(false)
}

model Group {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  members     User[]    @relation(references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  /// @onDelete(CASACADE)
  messages    Message[]
  inviter     Inviter   @relation(fields: [inviterId], references: [id])
  inviterId   Int
}

model Inviter {
  id     Int     @id @default(autoincrement())
  user   User    @relation(fields: [userId], references: [id])
  userId Int
  /// @onDelete(CASACADE)
  Group  Group[]
}
